# This is a basic workflow to help you get started with Actions

name: Build, push and deploy the adservice image to EKS.

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    paths: 
      - 'src/adservice/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-docker-image-and-push-to-harbor:
    # The type of runner that the job will run on
    runs-on: self-hosted

    defaults:
      run:
        working-directory: ./src/adservice

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: remove all docker containers and images (to avoid exceeding storage)
        run: yes | sudo docker system prune -a
        
#       Builds the docker image
      - name: build 
        run: sudo docker build ./ -t adservice
        
      - name: login to harbor
        run: echo "${{ secrets.HARBOR_PWD }}" | sudo docker login harbordemo351.tk -u "${{ secrets.HARBOR_USERNAME }}" --password-stdin
        
      - name: tag the image
        run: sudo docker tag adservice harbordemo351.tk/demo/adservice
      
      - name: push the image
        run: sudo docker push harbordemo351.tk/demo/adservice

  deploy-to-eks:
    needs: build-docker-image-and-push-to-harbor
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: update kubeconfig file
        run: aws eks --region ap-south-1 update-kubeconfig --name my-cluster

      - name: kubectl trigger deploy
        run: kubectl apply -f kubernetes-manifests/kubernetes-manifests.yaml

      - name: kubectl update particular pod
        run: kubectl delete pods -l app=frontend
        
  polaris:
    needs: deploy-to-eks
    runs-on: self-hosted
    
    steps:
      - uses: actions/checkout@v2
      
      - name: install polaris
        run: |
          brew tap FairwindsOps/tap
          brew install FairwindsOps/tap/polaris
          polaris version
      
      - name: audit
        run:  polaris audit --audit-path kubernetes-manifests/kubernetes-manifests.yaml --format=pretty 
  
  kubeaudit:
    # The type of runner that the job will run on
    needs: deploy-to-eks
    runs-on: self-hosted

    defaults:
      run:
        working-directory: ./kubernetes-manifests

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: install
        run: brew install kubeaudit
    
      - name: run tests
        run: kubeaudit all -f ./kubernetes-manifests.yaml 

  kube-bench:
    # The type of runner that the job will run on
    needs: deploy-to-eks
    runs-on: self-hosted

    defaults:
      run:
        working-directory: ./kube-bench
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: download kube-bench image and push
        run: |
              git clone https://github.com/aquasecurity/kube-bench.git
              cd kube-bench
              echo "${{ secrets.HARBOR_PWD }}" | sudo docker login harbordemo351.tk -u "${{ secrets.HARBOR_USERNAME }}" --password-stdin
              sudo docker build ./ -t k8s/kube-bench:latest 
              sudo docker tag k8s/kube-bench:latest harbordemo351.tk/demo/kube-bench:latest
              sudo docker push harbordemo351.tk/demo/kube-bench:latest
          
      - name: delete previous job if present
        run: kubectl delete job kube-bench --ignore-not-found=true
        
      - name: deploy as job
        run: kubectl apply -f job-eks.yaml
      
      - name: sleep
        run: sleep 5
        
      - name: publish the logs
        run: kubectl logs job/kube-bench 
